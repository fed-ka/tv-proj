ratios <- read.csv("~/Desktop/tv-final/5. Plot Tables/TV_Genre_Ratios.csv")
library(tm)
library(koRpus)
library(proxy)
library(ggplot2)
library(reshape2)
library(wordcloud)
library(sfsmisc)
ggplot(data=master.label, aes(x=genre, y=V3)) + geom_bar(stat="identity") + ggtitle("Weighted Average INT/EXT Ratio by Genre")
ggplot(data=ratios, aes(x=genre, y=int.ext.ratio)) +
geom_bar(stat="identity") + ggtitle("INT/EXT Ratio by Genre")
ratios <- read.csv("~/Desktop/tv-final/5. Plot Tables/TV_Genre_Ratios.csv")
ggplot(data=ratios, aes(x=genre, y=int.ext.ratio)) +
geom_bar(stat="identity") + ggtitle("INT/EXT Ratio by Genre")
master.lable <- read.csv("/Users/Fedor/Desktop/tv-final/2. Metadata/TV_Scripts_Master.csv")
ratios <- read.csv("~/Desktop/tv-final/5. Plot Tables/TV_Genre_Ratios.csv")
ggplot(data=master.label, aes(x=genre, y=V3)) + geom_bar(stat="identity") + ggtitle("Weighted Average INT/EXT Ratio by Genre")
library(ggplot2)
ggplot(data=master.label, aes(x=genre, y=V3)) + geom_bar(stat="identity") + ggtitle("Weighted Average INT/EXT Ratio by Genre")
master.label <- read.csv("/Users/Fedor/Desktop/tv-final/2. Metadata/TV_Scripts_Master.csv")
ggplot(data=master.label, aes(x=genre, y=V3)) + geom_bar(stat="identity") + ggtitle("Weighted Average INT/EXT Ratio by Genre")
View(master.label)
ggplot(data=master.label, aes(x=genre, y=int.ext.weighted)) + geom_bar(stat="identity") + ggtitle("Weighted Average INT/EXT Ratio by Genre")
ggplot(data=ratios, aes(x=genre, y=int.percentage)) +
geom_bar(stat="identity") + ggtitle("Percentage of scenes located indoors")
ggplot(data=ratios, aes(x=genre, y=int.ext.ratio)) +
geom_bar(stat="identity") + ggtitle("INT/EXT Ratio by Genre")
ggplot(master.label, aes(x=genre, y=int.percent)) + geom_boxplot() + ggtitle("Percentage of Script Lines Dedicated to Interior Scenes by Genre") + xlab("genre") + ylab("line %")
ggplot(data=ratios, aes(x=genre, y=total.titles)) +
geom_bar(stat="identity") + ggtitle("Total Scripts by Genre")
ggplot(master.label, aes(x=genre, y=int.percent)) + geom_boxplot() +
ggtitle("Percentage of Script Lines Dedicated to Interior Scenes by Genre") +
xlab("genre") + ylab("line %")
library(ggplot2)
library(dplyr)
library(reshape2)
met.collection <- read.csv("~/Data/Art/Met/MetObjects.csv")
nationality <- data.frame(table(met.collection$Artist.Nationality))
View(nationality)
nationality <- nationality[sort(Var1, -Freq), ]
nationality <- nationality[sort(Var1, -nationality$Freq), ]
View(nationality)
nationality <- nationality[sort(nationality$Var1, -nationality$Freq), ]
View(nationality)
nationality <- as.matrix(table(met.collection$Artist.Nationality))
nationality <- nationality[sort(Var1, -Freq), ]
nationality <- as.matrix(table(met.collection$Artist.Nationality))
nationality <- data.frame(table(met.collection$Artist.Nationality))
View(nationality)
nationality <- data.frame(table(sort(-met.collection$Artist.Nationality)))
nationality <- data.frame(table(sort(met.collection$Artist.Nationality)))
View(nationality)
nationality <- data.frame(table(met.collection$Artist.Nationality))
View(nationality)
nationality <- nationality[order(nationality, -Freq), ]
View(nationality)
nationality <- nationality[order(nationality$Freq,-rank(nationality$Freq), decreasing = TRUE), ]
View(nationality)
nationality <- gsub("\|.*","",nationality)
df <- nationality
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by country\n", x = "\nCountry", y = "Frequency\n") +
theme_classic()
df <- nationality[1:10, ]
df <- nationality[1:10, ]
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by country\n", x = "\nCountry", y = "Frequency\n") +
theme_classic()
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by country\n", x = "\nCountry", y = "Frequency\n") +
theme_classic()
df <- nationality[2:10, ]
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by country\n", x = "\nCountry", y = "Frequency\n") +
theme_classic()
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by country\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df <- nationality[2:11, ]
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by Country\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by Nationality\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by Artist Nationality\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
city <- data.frame(table(met.collection$City))
city <- city[order(city$Freq,-rank(city$Freq), decreasing = TRUE), ]
View(city)
df <- city[2:11, ]
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by Artist Nationality\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df <- city[2:11, ]
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by City\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
artist <- data.frame(table(met.collection$Artist.Name))
artist <- artist[order(artist$Freq,-rank(artist$Freq), decreasing = TRUE), ]
df <- artist[2:11, ]
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by artist\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
artist <- data.frame(table(met.collection$Artist.Name))
artist <- artist[order(artist$Freq,-rank(artist$Freq), decreasing = TRUE), ]
artist <- data.frame(table(met.collection$Artist.Display.Name))
artist <- data.frame(table(met.collection$Artist.Display.Name))
artist <- artist[order(artist$Freq,-rank(artist$Freq), decreasing = TRUE), ]
df <- artist[2:11, ]
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by artist\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df <- artist[2:21, ]
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by artist\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
artist <- data.frame(table(met.collection$Metadata.Date))
artist <- artist[order(artist$Freq,-rank(artist$Freq), decreasing = TRUE), ]
df <- artist[2:21, ]
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by artist\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
artist <- artist[order(artist$Freq,-rank(artist$Freq), decreasing = TRUE), ]
View(artist)
artist <- data.frame(table(met.collection$Period))
artist <- artist[order(artist$Freq,-rank(artist$Freq), decreasing = TRUE), ]
df <- artist[2:21, ]
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by artist\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
period <- data.frame(table(met.collection$Period))
period <- period[order(period$Freq,-rank(period$Freq), decreasing = TRUE), ]
df <- period[2:11, ]
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by period\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(met.collection)
summary(met.collection$Object.Date)
period <- data.frame(table(met.collection$Object.Date))
period <- period[order(period$Freq,-rank(period$Freq), decreasing = TRUE), ]
df <- period[2:11, ]
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by period\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df <- period[3:11, ]
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by period\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df <- period[3:11, ]
ggplot(df, aes(x = Var1, y = -Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by period\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df <- period[3:11, ]
ggplot(df, aes(x = -Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by period\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x = Var1, y = order(rank(-Freq))) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by period\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
][[s]]
date <- data.frame(table(met.collection$Object.Date))
date <- date[order(date$Freq,-rank(date$Freq), decreasing = TRUE), ]
df <- date[3:11, ]
ggplot(df, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", color = "black", fill = "grey") +
labs(title = "Frequency by Date\n", x = "\nCountry", y = "Frequency\n") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
setwd("~/Dropbox/1_Research/tv-final/2. Metadata")
all.tv <- read.csv("TV_Scripts_Master.csv")
all.tv$medium <- "tv"
tv.int <- subset(all.tv, date>1989 & date<2016, select=c(medium, title, genre, int.percent))
all.film <- read.csv("Film_Scripts_Master.csv")
all.film$medium <- "film"
film.int <- subset(all.film, date>1989 & date<2016, select=c(medium, title, genre, int.percent))
shapiro.test(film.int$int.percent)
hist(film.int$int.percent)
hist(tv.int$int.percent)
i = 1
setwd("~/Dropbox/1_Research/tv-final/3. Scenes Per Script/Film_Scenes/")
files <- list.files(path="~/Dropbox/1_Research/tv-final/3. Scenes Per Script/Film_Scenes")
time <- data.frame()
weight.ratios <- data.frame()
domdict <- read.csv("~/Dropbox/1_Research/tv-final/5. Plot Tables/INT-EXT Labels by Space Type/Film_MFW_INT.csv", header = F)
domestic <- domdict[which(domdict$V5=='domestic'),]
dommatch <- domestic$V2
workplace <- domdict[which(domdict$V5=='workplace'),]
workmatch <- workplace$V2
print(files[i])
space<-as.matrix(read.csv(files[i], header=F))
time[i,1]<- gsub("_Scenes.csv", "", files[i])
len.space = NROW(space)
first.scene = ifelse(grepl("INT", space[1, 2]), 1, 0)
first.dom = ifelse(grepl(paste(dommatch,collapse="|"), space[1, 2]), 1, 0)
first.work = ifelse(grepl(paste(workmatch,collapse="|"), space[1, 2]), 1, 0)
last.scene = ifelse(grepl("INT", space[len.space, 2]), 1, 0)
last.dom = ifelse(grepl(paste(dommatch,collapse="|"), space[len.space, 2]), 1, 0)
last.work = ifelse(grepl(paste(workmatch,collapse="|"), space[len.space, 2]), 1, 0)
print(paste("first.scene:", first.dom, first.work))
print(paste("last.scene:", last.dom, last.work))
space.split = split(space, rep(1:4, each = ceiling(nrow(space)/4)))
space.one <- data.frame(space.split[1])
space.two <- data.frame(space.split[2])
space.three <- data.frame(space.split[3])
space.four <- data.frame(space.split[4])
print(files[i])
space<-as.matrix(read.csv(files[i], header=F))
time[i,1]<- gsub("_Scenes.csv", "", files[i])
len.space = NROW(space)
first.scene = ifelse(grepl("INT", space[1, 2]), 1, 0)
first.dom = ifelse(grepl(paste(dommatch,collapse="|"), space[1, 2]), 1, 0)
first.work = ifelse(grepl(paste(workmatch,collapse="|"), space[1, 2]), 1, 0)
last.scene = ifelse(grepl("INT", space[len.space, 2]), 1, 0)
last.dom = ifelse(grepl(paste(dommatch,collapse="|"), space[len.space, 2]), 1, 0)
last.work = ifelse(grepl(paste(workmatch,collapse="|"), space[len.space, 2]), 1, 0)
print(paste("first.scene:", first.dom, first.work))
print(paste("last.scene:", last.dom, last.work))
space.split = split(space, rep(1:4, each = ceiling(nrow(space)/4)))
space.one <- data.frame(space.split[1])
space.two <- data.frame(space.split[2])
space.three <- data.frame(space.split[3])
space.four <- data.frame(space.split[4])
setwd("~/Dropbox/1_Research/tv-final/3. Scenes Per Script/Film_Scenes/")
files <- list.files(path="~/Dropbox/1_Research/tv-final/3. Scenes Per Script/Film_Scenes")
time <- data.frame()
weight.ratios <- data.frame()
domdict <- read.csv("~/Dropbox/1_Research/tv-final/5. Plot Tables/INT-EXT Labels by Space Type/Film_MFW_INT.csv", header = F)
domestic <- domdict[which(domdict$V5=='domestic'),]
dommatch <- domestic$V2
workplace <- domdict[which(domdict$V5=='workplace'),]
workmatch <- workplace$V2
avg.int = 0
avg.ext = 0
i = 1
View(workplace)
View(domdict)
print(files[i])
space<-as.matrix(read.csv(files[i], header=F))
time[i,1]<- gsub("_Scenes.csv", "", files[i])
View(space)
len.space = NROW(space)
search.dom.one = length(grep(paste(dommatch,collapse="|"), space.one$X1, value=TRUE))
search.work.one = length(grep(paste(workmatch,collapse="|"), space.one$X1, value=TRUE))
one.value.dom = (search.dom.one)/(search.dom.one + search.work.one)
one.value.work = (search.work.one)/(search.dom.one + search.work.one)
print(paste("dom:", round(one.value.dom, digits=3), "work:", round(one.value.work, digits=3)))
setwd("~/Dropbox/1_Research/tv-final/2. Metadata")
all.tv <- read.csv("TV_Scripts_Master.csv")
all.tv$medium <- "tv"
tv.int <- subset(all.tv, date>1989 & date<2016, select=c(medium, title, genre, int.percent))
all.film <- read.csv("Film_Scripts_Master.csv")
all.film$medium <- "film"
film.int <- subset(all.film, date>1989 & date<2016, select=c(medium, title, genre, int.percent))
t.test(film.int$int.percent,tv.int$int.percent,alternative="less", var.equal=TRUE)
sd(film.int$int.percent)
sd(tv.intt$int.percent)
sd(tv.int$int.percent)
