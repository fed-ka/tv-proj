View(tv.post)
all.tv <- aggregate(.~tv.post$title, data=tv.post, FUN=mean)
View(all.tv)
all.tv <- aggregate(tv.post$title, data=tv.post, FUN=mean)
all.tv <- aggregate(tv.post$title, data=tv.post, FUN=mean)
all.tv <- aggregate(~tv.post$title, data=tv.post, FUN=mean)
all.tv <- aggregate(.~tv.post$title, data=tv.post, FUN=mean)
tv.post <- subset(master, date>1989 & date<2016)
all.tv <- aggregate(.~tv.post$title, data=tv.post, FUN=mean)
View(all.tv)
all.tv <- aggregate(.~tv.post$title, data=tv.post, FUN=mean)
View(all.tv)
tv.post$title <- "TV"
all.tv <- aggregate(.~tv.post$title, data=tv.post, FUN=mean)
View(all.tv)
agg.tv <- tv.post[9:31]
agg.tv <- tv.post[9:31,]
View(agg.tv)
tv.post <- subset(master, date>1989 & date<2016)
tv.post$title <- "TV"
agg.tv <- tv.post[,9:31]
View(agg.tv)
agg.tv <- as.matrix(tv.post[,9:31])
agg.tv <- as.matrix(tv.post)
View(agg.tv)
agg.tv <- agg.tv[,9:31]
agg.tv <- agg.tv[,9:30]
all.tv <- aggregate(.~agg.tv$title, data=agg.tv, FUN=mean)
all.tv <- aggregate(.~agg.tv[0], data=agg.tv, FUN=mean)
tv.post <- subset(master, date>1989 & date<2016)
tv.all <- tv.post[,9:30]
View(tv.all)
tv.all <- tv.post[,10:30]
tv.all$title <- "TV"
tv.all <- aggregate(tv.all, by=tv.all$title, data=tv.all, FUN=mean)
View(tv.all)
tv.all <- aggregate(.~tv.all$title, data=tv.all, FUN=mean)
View(tv.all)
tv.all <- aggregate(.~tv.all$title, data=tv.all, FUN=mean, na.rm=TRUE, na.action=NULL)
View(tv.all)
tv.all <- as.numeric(tv.all)
tv.post <- subset(master, date>1989 & date<2016)
tv.all <- tv.post[,10:30]
tv.all <- as.numeric(tv.all)
tv.all <- data.matrix(tv.all)
View(tv.all)
tv.all <- aggregate(.~tv.all$title, data=tv.all, FUN=mean, na.rm=TRUE, na.action=NULL)
tv.all <- data.frame(tv.all)
tv.all$title <- "TV"
tv.all <- aggregate(.~tv.all$title, data=tv.all, FUN=mean, na.rm=TRUE, na.action=NULL)
View(tv.all)
tv.all <- aggregate(. ~ tv.all$title + tv.all$int.ext.ratio, data=tv.all, FUN=mean)
tv.post <- subset(master, date>1989 & date<2016)
tv.all <- tv.post[,10:30]
tv.all$title <- "TV"
tv.all <- aggregate(. ~ tv.all$title + tv.all$int.ext.ratio, data=tv.all, FUN=mean)
View(tv.all)
View(tv.all)
tv.all <- aggregate(. ~ tv.all$title, data=tv.all, mean)
tv.post <- subset(master, date>1989 & date<2016)
tv.all <- tv.post[,10:30]
tv.all$title <- "TV"
tv.all <- aggregate(. ~ tv.all$title, data=tv.all, mean)
View(tv.all)
tv.all <- aggregate(. ~ tv.all$title, data=tv.all, mean, na.rm = TRUE)
tv.post <- subset(master, date>1989 & date<2016)
tv.all <- tv.post[,10:30]
tv.all$title <- "TV"
tv.all <- aggregate(. ~ tv.all$title, data=tv.all, mean, na.rm = TRUE)
View(tv.all)
tv.all <- aggregate(. ~ title, data=tv.all, mean, na.rm = TRUE)
tv.post <- subset(master, date>1989 & date<2016)
tv.all <- tv.post[,10:30]
tv.all$title <- "TV"
tv.all <- aggregate(. ~ title, data=tv.all, mean, na.rm = TRUE)
View(tv.all)
tv.all <- melt(tv.all)
View(tv.all)
tv.all <- [,1:3]
View(tv.all)
tv.int <- tv.all[4:9, 2:3]
View(tv.int)
tv.int <- tv.all[4:9, 2:3]
tv.dom <- tv.all[10:15, 2:3]
tv.work <- tv.all[15:21, 2:3]
View(tv.int)
tv.plot <- cbind(c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00"), tv.int[, 1], tv.dom[, 1], tv.work[,1])
View(tv.int)
tv.int[,1]
View(tv.int)
tv.plot <- cbind(c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00"), tv.int$value, tv.dom$value, tv.work$value)
View(tv.plot)
tv.plot <- cbind(c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00"), round(tv.int$value, digits=3), tv.dom$value, tv.work$value)
View(tv.plot)
tv.plot <- cbind(c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00"), round(tv.int$value, digits=3), round(tv.dom$value, digits = 3), round(tv.work$value, digits = 3))
View(tv.plot)
tv.plot <- data.frame(cbind(c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00"), round(tv.int$value, digits=3), round(tv.dom$value, digits = 3), round(tv.work$value, digits = 3)))
View(tv.plot)
View(tv.post)
View(tv.plot)
View(tv.plot)
colnames(tv.plot) <- c("time", "int.perc", "dom.perc", "work.perc")
View(tv.plot)
tv.plot <- melt(tv.plot)
View(tv.plot)
tv.plot <- melt(tv.plot)
View(tv.plot)
View(tv.plot)
tv.post <- subset(master, date>1989 & date<2016)
tv.all <- tv.post[,10:30]
tv.all$title <- "TV"
tv.all <- aggregate(. ~ title, data=tv.all, mean, na.rm = TRUE)
View(tv.all)
tv.all <- melt(tv.all)
View(tv.all)
tv.all <- tv.post[,12:30]
tv.all$title <- "TV"
tv.all <- aggregate(. ~ title, data=tv.all, mean, na.rm = TRUE)
tv.all <- melt(tv.all)
View(tv.all)
tv.post <- subset(master, date>1989 & date<2016)
tv.all <- tv.post[,13:30]
tv.all$title <- "TV"
tv.all <- aggregate(. ~ title, data=tv.all, mean, na.rm = TRUE)
tv.all <- melt(tv.all)
View(tv.all)
View(tv.all)
View(tv.all)
tv.all$title[1:6] <- "int"
View(tv.all)
tv.all$title[13:18] <- "work"
tv.all$title[7:13] <- "dom"
View(tv.all)
tv.all$variable[1:6] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[7:13] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[13:18] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
View(tv.all)
tv.all$variable[1:6] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
View(tv.all)
tv.all$variable[0:5] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[6:12] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[13:18] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
View(tv.all)
View(tv.all)
tv.post <- subset(master, date>1989 & date<2016)
tv.all <- tv.post[,13:30]
tv.all$title <- "TV"
tv.all <- aggregate(. ~ title, data=tv.all, mean, na.rm = TRUE)
tv.all <- melt(tv.all)
View(tv.all)
tv.all$title[1:6] <- "int"
tv.all$title[7:12] <- "dom"
tv.all$title[13:18] <- "work"
tv.all$variable[1:6] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[7:12] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[13:18] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
View(tv.all)
tv.all$variable[1:6] <- c("T0.0", "T0.0-0.25", "T0.25-0.50", "T0.50-0.75", "T0.75-1.00", "T1.00")
tv.post <- subset(master, date>1989 & date<2016)
tv.all <- tv.post[,13:30]
tv.all$title <- "TV"
tv.all <- data.frame(aggregate(. ~ title, data=tv.all, mean, na.rm = TRUE), stringsAsFactors = FALSE)
tv.all <- melt(tv.all)
tv.all$title[1:6] <- "int"
tv.all$title[7:12] <- "dom"
tv.all$title[13:18] <- "work"
tv.all$variable[1:6] <- c("T0.0", "T0.0-0.25", "T0.25-0.50", "T0.50-0.75", "T0.75-1.00", "T1.00")
tv.all$variable[7:12] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[13:18] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[1:6] <- as.factor(c("T0.0", "T0.0-0.25", "T0.25-0.50", "T0.50-0.75", "T0.75-1.00", "T1.00"))
tv.all$variable <- NULL
tv.all$variable[1:6] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[7:12] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[13:18] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.0
)
source('~/Dropbox/1_Research/tv-final/7. Code/8_plot_time.R', echo=TRUE)
tv.all$title[1:6] <- "int"
tv.all$title[7:12] <- "dom"
tv.all$title[13:18] <- "work"
tv.all$variable <- NULL
tv.all$variable[1:6] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00"))
tv.all$variable[7:12] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[13:18] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.post <- subset(master, date>1989 & date<2016)
tv.all <- tv.post[,13:30]
tv.all$title <- "TV"
tv.all <- data.frame(aggregate(. ~ title, data=tv.all, mean, na.rm = TRUE), stringsAsFactors = FALSE)
tv.all <- melt(tv.all)
tv.all$title[1:6] <- "int"
tv.all$title[7:12] <- "dom"
tv.all$title[13:18] <- "work"
tv.all$variable <- NULL
tv.all$variable[1:6] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00"))
tv.all$variable[7:12] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[13:18] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[1:6] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[7:12] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[13:18] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
View(tv.plot)
View(tv.all)
View(tv.all)
ggobj <- ggplot(tv.plot, aes(x=variable,y=value, group=title, colour=title)) + geom_line(stat = "identity") + geom_point() + ggtitle("Space-Time in Television") + labs(x="Script Time", y="INT Percentage")
print(ggobj)
ggobj <- ggplot(tv.all, aes(x=variable,y=value, group=title, colour=title)) + geom_line(stat = "identity") + geom_point() + ggtitle("Space-Time in Television") + labs(x="Script Time", y="INT Percentage")
print(ggobj)
setwd("~/Dropbox/1_Research/tv-final/3. Scenes Per Script/TV_Scenes")
files <- list.files(path="~/Dropbox/1_Research/tv-final/3. Scenes Per Script/TV_Scenes")
time <- data.frame()
weight.ratios <- data.frame()
domdict <- read.csv("~/Dropbox/1_Research/tv-final/5. Plot Tables/INT-EXT Labels by Space Type/TV_MFW_INT.csv", header = F)
domestic <- domdict[which(domdict$V5=='domestic'),]
dommatch <- domestic$V2
workplace <- domdict[which(domdict$V5=='workplace'),]
workmatch <- workplace$V2
avg.int = 0
avg.ext = 0
for (i in 1:length(files)){
print(files[i])
space<-as.matrix(read.csv(files[i], header=F))
time[i,1]<- gsub("_Scenes.csv", "", files[i])
len.space = NROW(space)
first.scene = ifelse(grepl("INT", space[1, 2]), 1, 0)
first.dom = ifelse(grepl(paste(dommatch,collapse="|"), space[1, 2]), 1, 0)
first.work = ifelse(grepl(paste(workmatch,collapse="|"), space[1, 2]), 1, 0)
last.scene = ifelse(grepl("INT", space[len.space, 2]), 1, 0)
last.dom = ifelse(grepl(paste(dommatch,collapse="|"), space[len.space, 2]), 1, 0)
last.work = ifelse(grepl(paste(workmatch,collapse="|"), space[len.space, 2]), 1, 0)
print(paste("first.scene:", first.dom, first.work))
print(paste("last.scene:", last.dom, last.work))
space.split = split(space, rep(1:4, each = ceiling(nrow(space)/4)))
space.one <- data.frame(space.split[1])
space.two <- data.frame(space.split[2])
space.three <- data.frame(space.split[3])
space.four <- data.frame(space.split[4])
search.int.one = length(grep("INT", space.one$X1, value=TRUE))
search.ext.one = length(grep("EXT", space.one$X1, value=TRUE))
one.value = (search.int.one)/(search.int.one + search.ext.one)
search.dom.one = length(grep(paste(dommatch,collapse="|"), space.one$X1, value=TRUE))
search.work.one = length(grep(paste(workmatch,collapse="|"), space.one$X1, value=TRUE))
one.value.dom = (search.dom.one)/length(search.int.one)
one.value.work = (search.work.one)/length(search.int.one)
print(paste("dom:", round(one.value.dom, digits=3), "work:", round(one.value.work, digits=3)))
search.int.two = length(grep("INT", space.two$X2, value=TRUE))
search.ext.two = length(grep("EXT", space.two$X2, value=TRUE))
two.value = (search.int.two)/(search.int.two + search.ext.two)
#print(paste("two.value:", two.value))
search.dom.two = length(grep(paste(dommatch,collapse="|"), space.two$X2, value=TRUE))
search.work.two = length(grep(paste(workmatch,collapse="|"), space.two$X2, value=TRUE))
two.value.dom = (search.dom.two)/length(search.int.one)
two.value.work = (search.work.two)/length(search.int.one)
print(paste("dom:", round(two.value.dom, digits=3), "work:", round(two.value.work, digits=3)))
search.int.three = length(grep("INT", space.three$X3, value=TRUE))
search.ext.three = length(grep("EXT", space.three$X3, value=TRUE))
three.value = (search.int.three)/(search.int.three + search.ext.three)
#print(paste("three.value:", three.value))
search.dom.three = length(grep(paste(dommatch,collapse="|"), space.three$X3, value=TRUE))
search.work.three = length(grep(paste(workmatch,collapse="|"), space.three$X3, value=TRUE))
three.value.dom = (search.dom.three)/length(search.int.one)
three.value.work = (search.work.three)/length(search.int.one)
print(paste("dom:", round(three.value.dom, digits=3), "work:", round(three.value.work, digits=3)))
search.int.four = length(grep("INT", space.four$X4, value=TRUE))
search.ext.four = length(grep("EXT", space.four$X4, value=TRUE))
four.value = (search.int.four)/(search.int.four + search.ext.four)
#print(paste("four.value:", four.value))
search.dom.four = length(grep(paste(dommatch,collapse="|"), space.four$X4, value=TRUE))
search.work.four = length(grep(paste(workmatch,collapse="|"), space.four$X4, value=TRUE))
four.value.dom = (search.dom.four)/length(search.int.one)
four.value.work = (search.work.four)/length(search.int.one)
print(paste("dom:", round(four.value.dom, digits=3), "work:", round(four.value.work, digits=3)))
time[i, 2] <- round(as.numeric(first.scene), digits= 2)
time[i, 3] <- round(as.numeric(one.value), digits = 2)
time[i, 4] <- round(as.numeric(two.value), digits = 2)
time[i, 5] <- round(as.numeric(three.value), digits = 2)
time[i, 6] <- round(as.numeric(four.value), digits = 2)
time[i, 7] <- round(as.numeric(last.scene), digits = 2)
time[i, 8] <- round(as.numeric(first.dom), digits= 2)
time[i, 9] <- round(as.numeric(one.value.dom), digits = 2)
time[i, 10] <- round(as.numeric(two.value.dom), digits = 2)
time[i, 11] <- round(as.numeric(three.value.dom), digits = 2)
time[i, 12] <- round(as.numeric(four.value.dom), digits = 2)
time[i, 13] <- round(as.numeric(last.dom), digits = 2)
time[i, 14] <- round(as.numeric(first.work), digits= 2)
time[i, 15] <- round(as.numeric(one.value.work), digits = 2)
time[i, 16] <- round(as.numeric(two.value.work), digits = 2)
time[i, 17] <- round(as.numeric(three.value.work), digits = 2)
time[i, 18] <- round(as.numeric(four.value.work), digits = 2)
time[i, 19] <- round(as.numeric(last.work), digits = 2)
}
one.value.dom = (search.dom.one)/length(search.dom.one + search.work.one)
one.value.dom = (search.dom.one)/(search.dom.one + search.work.one)
for (i in 1:length(files)){
print(files[i])
space<-as.matrix(read.csv(files[i], header=F))
time[i,1]<- gsub("_Scenes.csv", "", files[i])
len.space = NROW(space)
first.scene = ifelse(grepl("INT", space[1, 2]), 1, 0)
first.dom = ifelse(grepl(paste(dommatch,collapse="|"), space[1, 2]), 1, 0)
first.work = ifelse(grepl(paste(workmatch,collapse="|"), space[1, 2]), 1, 0)
last.scene = ifelse(grepl("INT", space[len.space, 2]), 1, 0)
last.dom = ifelse(grepl(paste(dommatch,collapse="|"), space[len.space, 2]), 1, 0)
last.work = ifelse(grepl(paste(workmatch,collapse="|"), space[len.space, 2]), 1, 0)
print(paste("first.scene:", first.dom, first.work))
print(paste("last.scene:", last.dom, last.work))
space.split = split(space, rep(1:4, each = ceiling(nrow(space)/4)))
space.one <- data.frame(space.split[1])
space.two <- data.frame(space.split[2])
space.three <- data.frame(space.split[3])
space.four <- data.frame(space.split[4])
search.int.one = length(grep("INT", space.one$X1, value=TRUE))
search.ext.one = length(grep("EXT", space.one$X1, value=TRUE))
one.value = (search.int.one)/(search.int.one + search.ext.one)
search.dom.one = length(grep(paste(dommatch,collapse="|"), space.one$X1, value=TRUE))
search.work.one = length(grep(paste(workmatch,collapse="|"), space.one$X1, value=TRUE))
one.value.dom = (search.dom.one)/(search.dom.one + search.work.one)
one.value.work = (search.work.one)/(search.dom.one + search.work.one)
print(paste("dom:", round(one.value.dom, digits=3), "work:", round(one.value.work, digits=3)))
search.int.two = length(grep("INT", space.two$X2, value=TRUE))
search.ext.two = length(grep("EXT", space.two$X2, value=TRUE))
two.value = (search.int.two)/(search.int.two + search.ext.two)
#print(paste("two.value:", two.value))
search.dom.two = length(grep(paste(dommatch,collapse="|"), space.two$X2, value=TRUE))
search.work.two = length(grep(paste(workmatch,collapse="|"), space.two$X2, value=TRUE))
two.value.dom = (search.dom.two)/(search.dom.two + search.work.two)
two.value.work = (search.work.two)/(search.dom.two + search.work.two)
print(paste("dom:", round(two.value.dom, digits=3), "work:", round(two.value.work, digits=3)))
search.int.three = length(grep("INT", space.three$X3, value=TRUE))
search.ext.three = length(grep("EXT", space.three$X3, value=TRUE))
three.value = (search.int.three)/(search.int.three + search.ext.three)
#print(paste("three.value:", three.value))
search.dom.three = length(grep(paste(dommatch,collapse="|"), space.three$X3, value=TRUE))
search.work.three = length(grep(paste(workmatch,collapse="|"), space.three$X3, value=TRUE))
three.value.dom = (search.dom.three)/(search.dom.three + search.work.three)
three.value.work = (search.work.three)/(search.dom.three + search.work.three)
print(paste("dom:", round(three.value.dom, digits=3), "work:", round(three.value.work, digits=3)))
search.int.four = length(grep("INT", space.four$X4, value=TRUE))
search.ext.four = length(grep("EXT", space.four$X4, value=TRUE))
four.value = (search.int.four)/(search.int.four + search.ext.four)
#print(paste("four.value:", four.value))
search.dom.four = length(grep(paste(dommatch,collapse="|"), space.four$X4, value=TRUE))
search.work.four = length(grep(paste(workmatch,collapse="|"), space.four$X4, value=TRUE))
four.value.dom = (search.dom.four)/(search.dom.four + search.work.four)
four.value.work = (search.work.four)/(search.dom.four + search.work.four)
print(paste("dom:", round(four.value.dom, digits=3), "work:", round(four.value.work, digits=3)))
time[i, 2] <- round(as.numeric(first.scene), digits= 2)
time[i, 3] <- round(as.numeric(one.value), digits = 2)
time[i, 4] <- round(as.numeric(two.value), digits = 2)
time[i, 5] <- round(as.numeric(three.value), digits = 2)
time[i, 6] <- round(as.numeric(four.value), digits = 2)
time[i, 7] <- round(as.numeric(last.scene), digits = 2)
time[i, 8] <- round(as.numeric(first.dom), digits= 2)
time[i, 9] <- round(as.numeric(one.value.dom), digits = 2)
time[i, 10] <- round(as.numeric(two.value.dom), digits = 2)
time[i, 11] <- round(as.numeric(three.value.dom), digits = 2)
time[i, 12] <- round(as.numeric(four.value.dom), digits = 2)
time[i, 13] <- round(as.numeric(last.dom), digits = 2)
time[i, 14] <- round(as.numeric(first.work), digits= 2)
time[i, 15] <- round(as.numeric(one.value.work), digits = 2)
time[i, 16] <- round(as.numeric(two.value.work), digits = 2)
time[i, 17] <- round(as.numeric(three.value.work), digits = 2)
time[i, 18] <- round(as.numeric(four.value.work), digits = 2)
time[i, 19] <- round(as.numeric(last.work), digits = 2)
}
setwd("~/Dropbox/1_Research/tv-final/2. Metadata")
colnames(time) <- c("title", "int.0.0", "int.0.0~0.25", "int.0.25~0.50", "int.0.50~0.75", "int.0.75~1.0", "int.1.0", "dom.0.0", "dom.0.0~0.25", "dom.0.25~0.50", "dom.0.50~0.75", "dom.0.75~1.0", "dom.1.0", "work.0.0", "work.0.0~0.25", "work.0.25~0.50", "work.0.50~0.75", "work.0.75~1.0", "work.1.0")
master.label <- read.csv("TV_Scripts_Master.csv")
master.table <- master.label
master.table <- apply(master.table, 2, function(y) gsub(".txt", "", y))
master.table <- merge(x=master.table, y=time, by.x="title")
write.table(master.table, file = "TV_Time_Master.csv", sep=",")
setwd("~/Dropbox/1_Research/tv-final/2. Metadata/")
master <- read.csv("TV_Time_Master.csv")
shows <- gsub("_\\S*","",master$title)
table <- as.matrix(table(shows))
tv.post <- subset(master, date>1989 & date<2016)
tv.all <- tv.post[,10:30]
tv.time <- data.frame(tv.post$title, tv.post$genre, tv.post$X0.0, tv.post$X0.0.0.25, tv.post$X0.25.0.50, tv.post$X0.50.0.75, tv.post$X0.75.1.0, tv.post$X1.0)
tv.time.genre <- data.frame(tv.post$genre, tv.post$X0.0, tv.post$X0.0.0.25, tv.post$X0.25.0.50, tv.post$X0.50.0.75, tv.post$X0.75.1.0, tv.post$X1.0)
genres <- aggregate(.~tv.time.genre$tv.post.genre, data=tv.time.genre, FUN=mean)
colnames(genres) <- c("genre", "number", "X0.0", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0", "X1.0")
tv.post <- subset(master, date>1989 & date<2016)
tv.all <- tv.post[,13:30]
tv.all$title <- "TV"
tv.all <- data.frame(aggregate(. ~ title, data=tv.all, mean, na.rm = TRUE), stringsAsFactors = FALSE)
tv.all <- melt(tv.all)
tv.all$title[1:6] <- "int"
tv.all$title[7:12] <- "dom"
tv.all$title[13:18] <- "work"
tv.all$variable <- NULL
tv.all$variable[1:6] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[7:12] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
tv.all$variable[13:18] <- c("0.0", "0.0-0.25", "0.25-0.50", "0.50-0.75", "0.75-1.00", "1.00")
ggobj <- ggplot(tv.all, aes(x=variable,y=value, group=title, colour=title)) + geom_line(stat = "identity") + geom_point() + ggtitle("Space-Time in Television") + labs(x="Script Time", y="INT Percentage")
print(ggobj)
View(tv.all)
tv.all <- tv.all[-c(1, 6, 7, 12, 13, 18),]
ggobj <- ggplot(tv.all, aes(x=variable,y=value, group=title, colour=title)) + geom_line(stat = "identity") + geom_point() + ggtitle("Space-Time in Television") + labs(x="Script Time", y="INT Percentage")
print(ggobj)
setwd("~/Dropbox/1_Research/tv-final/5. Plot Tables/INT-EXT Labels by Space Type")
tv.mfw.int <- read.csv("TV_MFW_Int.csv", header = F)
tv.mfw.ext <- read.csv("TV_MFW_Ext.csv", header = F)
film.mfw.int <- read.csv("Film_MFW_Int.csv", header = F)
film.mfw.ext <- read.csv("Film_MFW_Ext.csv", header = F)
library(ggplot2)
setwd("~/Dropbox/1_Research/tv-final/5. Plot Tables/INT-EXT Labels by Space Type")
# Read all-csv
tv.mfw.int <- read.csv("TV_MFW_Int.csv", header = F)
tv.mfw.ext <- read.csv("TV_MFW_Ext.csv", header = F)
film.mfw.int <- read.csv("Film_MFW_Int.csv", header = F)
film.mfw.ext <- read.csv("Film_MFW_Ext.csv", header = F)
#calculate percentages
tv.mfw.int$perc <- tv.mfw.int$V3 / sum(tv.mfw.int$V3) * 100
tv.mfw.ext$perc <- tv.mfw.ext$V3 / sum(tv.mfw.ext$V3) * 100
film.mfw.int$perc <- film.mfw.int$V3 / sum(film.mfw.int$V3) * 100
film.mfw.ext$perc <- film.mfw.ext$V3 / sum(film.mfw.ext$V3) * 100
colnames(tv.mfw.int) <- c("medium","words", "freq", "type1", "type2", "perc")
colnames(tv.mfw.ext) <- c("medium", "words", "freq", "type1", "perc")
colnames(film.mfw.int) <- c("medium","words", "freq", "type1", "type2", "perc")
colnames(film.mfw.ext) <- c("medium", "words", "freq", "type1", "perc")
bar.mfw.int <- rbind(tv.mfw.int, film.mfw.int)
bar.mfw.ext <- rbind(tv.mfw.ext, film.mfw.ext)
tv.domestic.mean <- tv.mfw.int[tv.mfw.int$type2 == "domestic", ]
tv.dom.perc <- (sum(tv.domestic.mean$freq))/(sum(tv.mfw.int$freq))
tv.work.mean <- tv.mfw.int[tv.mfw.int$type2 == "workplace", ]
tv.work.perc <- (sum(tv.work.mean$freq))/(sum(tv.mfw.int$freq))
film.domestic.mean <- film.mfw.int[film.mfw.int$type2 == "domestic", ]
film.dom.perc <- (sum(film.domestic.mean$freq))/(sum(film.mfw.int$freq))
film.work.mean <- film.mfw.int[film.mfw.int$type2 == "workplace", ]
film.work.perc <- (sum(film.work.mean$freq))/(sum(film.mfw.int$freq))
short.tv <- tv.mfw.int[c(1:20),]
short.film <- film.mfw.int[c(1:20),]
short.tv.ext <- tv.mfw.ext[c(1:20),]
short.film.ext <- film.mfw.ext[c(1:20),]
dom.work <- data.frame()
dom.work <- rbind(dom.work, tv.dom.perc, film.dom.perc)
dom.work <- row.names("tv", "film")
dom.work <- colnames("tv", "film")
domvwork <- NULL
perc <- c(film.dom.perc*100, film.work.perc*100, tv.dom.perc*100, tv.work.perc*100)
medium <- c("film", "film", "tv", "tv")
type <- c("domestic", "workplace", "domestic", "workplace")
domvwork <- data.frame(medium, type, perc)
View(domvwork)
boxplot.medium <- ggplot(domvwork, aes(factor(type), perc))
theme = theme_set(theme_minimal())
theme = theme_update(legend.position="top", legend.title=element_blank(), panel.grid.major.x=element_blank())
boxplot.medium <- ggplot(domvwork, aes(factor(type), perc))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=factor(medium))) +
scale_fill_brewer(palette="Pastel2") +
ggtitle(title_all) +
guides(fill=FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white",
fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
geom_text(data = means.medium,
aes(label = round(int.percent, digits = 3),
y = int.percent + 0.05)) +
geom_text(data = means.medium, aes(label = medium)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
title_all = "INT Scene Labels by Domestic or Workplace"
boxplot.medium <- ggplot(domvwork, aes(factor(type), perc))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=factor(medium))) +
scale_fill_brewer(palette="Pastel2") +
ggtitle(title_all) +
guides(fill=FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white",
fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
geom_text(data = means.medium,
aes(label = round(int.percent, digits = 3),
y = int.percent + 0.05)) +
geom_text(data = means.medium, aes(label = medium)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=factor(medium))) +
scale_fill_brewer(palette="Pastel2") +
ggtitle(title_all) +
guides(fill=FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white",
fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
geom_text(data = means.medium, aes(label = medium)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=factor(medium))) +
scale_fill_brewer(palette="Pastel2") +
ggtitle(title_all) +
guides(fill=FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white",
fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
boxplot.medium <- ggplot(domvwork, aes(factor(type), perc))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=factor(medium))) +
scale_fill_brewer(palette="Pastel2") +
ggtitle(title_all) +
guides(fill=FALSE)
boxplot.medium <- ggplot(domvwork, aes(factor(type), perc))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=factor(medium))) +
scale_fill_brewer(palette="Pastel2") +
ggtitle(title_all)
library(ggplot2)
title_all = "INT Scene Labels by Domestic or Workplace"
boxplot.medium <- ggplot(domvwork, aes(factor(type), perc))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=factor(medium))) +
scale_fill_brewer(palette="Pastel2") +
ggtitle(title_all)
