ratios <- read.csv("~/Desktop/tv-final/5. Plot Tables/TV_Genre_Ratios.csv")
library(tm)
library(koRpus)
library(proxy)
library(ggplot2)
library(reshape2)
library(wordcloud)
library(sfsmisc)
ggplot(data=master.label, aes(x=genre, y=V3)) + geom_bar(stat="identity") + ggtitle("Weighted Average INT/EXT Ratio by Genre")
ggplot(data=ratios, aes(x=genre, y=int.ext.ratio)) +
geom_bar(stat="identity") + ggtitle("INT/EXT Ratio by Genre")
ratios <- read.csv("~/Desktop/tv-final/5. Plot Tables/TV_Genre_Ratios.csv")
ggplot(data=ratios, aes(x=genre, y=int.ext.ratio)) +
geom_bar(stat="identity") + ggtitle("INT/EXT Ratio by Genre")
master.lable <- read.csv("/Users/Fedor/Desktop/tv-final/2. Metadata/TV_Scripts_Master.csv")
ratios <- read.csv("~/Desktop/tv-final/5. Plot Tables/TV_Genre_Ratios.csv")
ggplot(data=master.label, aes(x=genre, y=V3)) + geom_bar(stat="identity") + ggtitle("Weighted Average INT/EXT Ratio by Genre")
library(ggplot2)
ggplot(data=master.label, aes(x=genre, y=V3)) + geom_bar(stat="identity") + ggtitle("Weighted Average INT/EXT Ratio by Genre")
master.label <- read.csv("/Users/Fedor/Desktop/tv-final/2. Metadata/TV_Scripts_Master.csv")
ggplot(data=master.label, aes(x=genre, y=V3)) + geom_bar(stat="identity") + ggtitle("Weighted Average INT/EXT Ratio by Genre")
View(master.label)
ggplot(data=master.label, aes(x=genre, y=int.ext.weighted)) + geom_bar(stat="identity") + ggtitle("Weighted Average INT/EXT Ratio by Genre")
ggplot(data=ratios, aes(x=genre, y=int.percentage)) +
geom_bar(stat="identity") + ggtitle("Percentage of scenes located indoors")
ggplot(data=ratios, aes(x=genre, y=int.ext.ratio)) +
geom_bar(stat="identity") + ggtitle("INT/EXT Ratio by Genre")
ggplot(master.label, aes(x=genre, y=int.percent)) + geom_boxplot() + ggtitle("Percentage of Script Lines Dedicated to Interior Scenes by Genre") + xlab("genre") + ylab("line %")
ggplot(data=ratios, aes(x=genre, y=total.titles)) +
geom_bar(stat="identity") + ggtitle("Total Scripts by Genre")
ggplot(master.label, aes(x=genre, y=int.percent)) + geom_boxplot() +
ggtitle("Percentage of Script Lines Dedicated to Interior Scenes by Genre") +
xlab("genre") + ylab("line %")
library(ggplot2)
library(reshape2)
library(plyr)
#count unique shows
setwd("~/Dropbox/1_Research/tv-final/2. Metadata/")
master.tv <- read.csv("TV_Time_Master.csv")
master.film <- read.csv("Film_Time_Master.csv")
tv.post <- subset(master.tv, date>1989 & date<2016)
film.post <- subset(master.film, date>1989 & date<2016)
tv.int <- data.frame(tv.post$title, tv.post$int.0.0.0.25, tv.post$int.0.25.0.50, tv.post$int.0.50.0.75, tv.post$int.0.75.1.0)
tv.genre <- data.frame(tv.post$genre, tv.post$int.0.0.0.25, tv.post$int.0.25.0.50, tv.post$int.0.50.0.75, tv.post$int.0.75.1.0)
film.int <- data.frame(film.post$time, film.post$int.0.0.0.25, film.post$int.0.25.0.50, film.post$int.0.50.0.75, film.post$int.0.75.1.0)
film.genre <- data.frame(film.post$genre, film.post$int.0.0.0.25, film.post$int.0.25.0.50, film.post$int.0.50.0.75, film.post$int.0.75.1.0)
genres.tv <- aggregate(.~tv.genre$tv.post.genre, data=tv.genre, FUN=mean)
genres.film <- aggregate(.~film.genre$film.post.genre, data=film.genre, FUN=mean)
colnames(genres.tv) <- c("genre", "number", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
colnames(genres.film) <- c("genre", "number", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
film.post <- subset(master.film, date>1989 & date<2016)
film.all <- film.post[,12:29]
film.all$title <- "film"
tv.post <- subset(master.tv, date>1989 & date<2016)
tv.all <- tv.post[,13:30]
tv.all$title <- "TV"
View(film.all)
film.all$int.mean <- rowMeans(subset(film.all, select = c(int.0.0.0.25, int.0.25.0.50 )), na.rm = TRUE)
View(film.all)
film.all$int.mean <- rowMeans(subset(film.all, select = c(int.0.0.0.25, int.0.25.0.50, int.0.50.0.75, int.0.75.1.00 )), na.rm = TRUE)
film.all$int.mean <- rowMeans(subset(film.all, select = c(int.0.0.0.25, int.0.25.0.50, int.0.50.0.75, int.0.75.1.0 )), na.rm = TRUE)
View(film.all)
film.all$dom.mean <- rowMeans(subset(film.all, select = c(dom.0.0.0.25, dom.0.25.0.50, dom.0.50.0.75, dom.0.75.1.0 )), na.rm = TRUE)
film.all$work.mean <- rowMeans(subset(film.all, select = c(work.0.0.0.25, work.0.25.0.50, work.0.50.0.75, work.0.75.1.0 )), na.rm = TRUE)
View(film.all)
film.bar <- [19:22,]
film.bar <- film.all[19:22,]
View(film.bar)
source('~/Dropbox/1_Research/tv-final/7. Code/8_plot_time.R', echo=TRUE)
film.bar <- film.all[,19:22]
View(film.bar)
View(tv.post)
tv.all <- tv.post[,12:29]
tv.all$title <- "tv"
tv.all$int.mean <- rowMeans(subset(tv.all, select = c(int.0.0.0.25, int.0.25.0.50, int.0.50.0.75, int.0.75.1.0 )), na.rm = TRUE)
tv.all$dom.mean <- rowMeans(subset(tv.all, select = c(dom.0.0.0.25, dom.0.25.0.50, dom.0.50.0.75, dom.0.75.1.0 )), na.rm = TRUE)
tv.all$work.mean <- rowMeans(subset(tv.all, select = c(work.0.0.0.25, work.0.25.0.50, work.0.50.0.75, work.0.75.1.0 )), na.rm = TRUE)
tv.bar <- tv.all[,19:22]
View(tv.bar)
all <- rbind(film.bar, tv.bar)
View(all)
boxplot.medium <- ggplot(all, aes(title, dom.mean))
boxplot.medium + geom_boxplot(aes(fill=title)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle(title_all)
boxplot.medium <- ggplot(all, aes(title, dom.mean))
boxplot.medium + geom_boxplot(aes(fill=title)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("blah")
boxplot.medium <- ggplot(all, aes(title, c(int.perc, dom.mean, work.mean)))
boxplot.medium + geom_boxplot(aes(fill=title)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("blah")
boxplot.medium <- ggplot(all, aes(title, c(int.mean, dom.mean, work.mean)))
boxplot.medium + geom_boxplot(aes(fill=title)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("blah")
all.melt <- melt(all)
View(all.melt)
View(all.melt)
boxplot.medium <- ggplot(all.melt, aes(title, value)))
boxplot.medium + geom_boxplot(aes(fill=variable)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("blah")
View(all.melt)
boxplot.medium <- ggplot(all.melt, aes(title, value))
boxplot.medium + geom_boxplot(aes(fill=variable)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("blah")
boxplot.medium <- ggplot(all.melt, aes(title, value))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=factor(variable))) +
scale_fill_brewer(palette="Pastel2") +
ggtitle(title_all) +
guides(fill=FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white",
fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
geom_text(data = means.medium,
aes(label = round(int.percent, digits = 3),
y = int.percent + 0.05)) +
geom_text(data = means.medium, aes(label = medium)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
boxplot.medium <- ggplot(all.melt, aes(title, value))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=factor(variable))) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("Percentage of Scenes Labelled as Domestic or Workplace") +
guides(fill=FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white",
fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
geom_text(data = means.medium,
aes(label = round(int.percent, digits = 3),
y = int.percent + 0.05)) +
geom_text(data = means.medium, aes(label = medium)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
View(all)
means.medium <- aggregate(.~title, all, mean)
View(means.medium)
boxplot.medium <- ggplot(all.melt, aes(title, value))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=factor(variable))) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("Percentage of Scenes Labelled as Domestic or Workplace") +
guides(fill=FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white",
fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
geom_text(data = means.medium,
aes(label = round(int.percent, digits = 3),
y = int.percent + 0.05)) +
geom_text(data = means.medium, aes(label = medium)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
View(means.medium)
boxplot.medium <- ggplot(all.melt, aes(title, value))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=factor(variable))) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("Percentage of Scenes Labelled as Domestic or Workplace") +
guides(fill=FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white",
fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
geom_text(data = means.medium,
aes(label = round(int.mean, digits = 3),
y = int.mean + 0.05)) +
geom_text(data = means.medium, aes(label = medium)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
boxplot.medium <- ggplot(all.melt, aes(title, value))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=factor(variable))) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("Percentage of Scenes Labelled as Domestic or Workplace") +
guides(fill=FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white",
fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
geom_text(data = means.medium,
aes(label = round(int.mean, digits = 3),
y = int.mean + 0.05)) +
geom_text(data = means.medium, aes(label = title)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
View(all.melt)
boxplot.medium <- ggplot(all.melt, aes(title, value))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=factor(variable))) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("Percentage of Scenes Labelled as Domestic or Workplace") +
guides(fill=FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white",
fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
geom_text(data = means.medium,
aes(label = round(int.mean, digits = 3),
y = int.mean + 0.05)) +
geom_text(data = means.medium, aes(label = title)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
View(means.medium)
boxplot.medium <- ggplot(all.melt, aes(title, value))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=variable)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("Percentage of Scenes Labelled as Domestic or Workplace") +
guides(fill=FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white",
fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
geom_text(data = means.medium,
aes(label = round(int.mean, digits = 3),
y = int.mean + 0.05)) +
geom_text(data = means.medium, aes(label = title)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
boxplot.medium <- ggplot(all.melt, aes(title, value))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=variable)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("Percentage of Scenes Labelled as Domestic or Workplace") +
guides(fill=FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white",
fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
geom_text(data = means.medium, aes(label = title)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
View(all.melt)
boxplot.medium <- ggplot(all.melt, aes(title, value))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=variable)) +
scale_fill_brewer(palette="Pastel2")
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=variable)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("Percentage of Scenes Labelled as Domestic or Workplace")
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=variable)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("Percentage of Scenes Labelled as Domestic or Workplace") +
guides(fill=FALSE)
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=variable)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("Percentage of Scenes Labelled as Domestic or Workplace")
boxplot.medium <- ggplot(all.melt, aes(title, value))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=variable)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("Percentage of Scenes Labelled as Domestic or Workplace") +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white",
fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) })
boxplot.medium <- ggplot(all.melt, aes(title, value))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=variable)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("Percentage of Scenes Labelled as Domestic or Workplace") +
geom_text(data = means.medium, aes(label = title))
boxplot.medium <- ggplot(all.melt, aes(title, value))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=variable)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("Percentage of Scenes Labelled as Domestic or Workplace") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
boxplot.medium <- ggplot(all.melt, aes(title, value))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=variable)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("Percentage of Scenes Labelled as Domestic or Workplace") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
boxplot.medium <- ggplot(all.melt, aes(title, value))
boxplot.medium + geom_boxplot(outlier.shape = NA, aes(fill=variable)) +
scale_fill_brewer(palette="Pastel2") +
ggtitle("Percentage of Scenes Labelled as Domestic or Workplace") +
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
shapiro.test(film.bar$int.mean)
i = 1
temp <- melt(tv.int[i, 1:ncol(tv.int)], id.vars = as.character(tv.int$title[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- temp[2:5,]
ggobj <- ggplot(temp, aes(x=temp$variable,y=temp$value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage") + ylim(0,1)
print(ggobj)
temp <- melt(tv.int[i, 1:ncol(tv.int)], id.vars = as.character(tv.int$title[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- temp[2:5,]
ggobj <- ggplot(temp, aes(x=temp$variable,y=temp$value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage") + scale_x_discrete(limits=0:1)
print(ggobj)
for (i in 1:nrow(tv.int)) {
temp <- melt(tv.int[i, 1:ncol(tv.int)], id.vars = as.character(tv.int$title[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- temp[2:5,]
ggobj <- ggplot(temp, aes(x=temp$variable,y=temp$value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage") + scale_x_discrete(0:1)
}\
temp <- melt(tv.int[i, 1:ncol(tv.int)], id.vars = as.character(tv.int$title[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- temp[2:5,]
ggobj <- ggplot(temp, aes(x=temp$variable,y=temp$value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage")+ scale_x_continuous(limits = c(0, 1))
print(ggobj)
temp <- melt(tv.int[i, 1:ncol(tv.int)], id.vars = as.character(tv.int$title[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- as.numeric(temp[2:5,])
ggobj <- ggplot(temp, aes(x=temp$variable,y=temp$value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage")+ scale_x_continuous(limits = c(0, 1))
print(ggobj)
temp <- as.numeric(melt(tv.int[i, 1:ncol(tv.int)], id.vars = as.character(tv.int$title[i]), factorsAsStrings = FALSE))
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- as.numeric(temp[2:5,])
ggobj <- ggplot(temp, aes(x=temp$variable,y=temp$value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage")+ scale_x_continuous(limits = c(0, 1))
print(ggobj)
temp <- as.numeric(melt(tv.int[i, 1:ncol(tv.int)], id.vars = as.character(tv.int$title[i]), StringsasFactors = FALSE))
temp <- melt(tv.int[i, 1:ncol(tv.int)], id.vars = as.character(tv.int$title[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- as.numeric(temp[2:5,])
ggobj <- ggplot(temp, aes(x=temp$variable,y=temp$value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage")+ coord_cartesian(xlim = c(0, 1))
print(ggobj)
temp <- melt(tv.int[i, 1:ncol(tv.int)], id.vars = as.character(tv.int$title[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- as.numeric(temp[2:5,])
ggobj <- ggplot(temp, aes(x=temp$variable,y=temp$value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage")+ coord_cartesian(ylim = c(0, 1))
print(ggobj)
temp <- melt(tv.int[i, 1:ncol(tv.int)], id.vars = as.character(tv.int$title[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- temp[2:5,]
ggobj <- ggplot(temp, aes(x=temp$variable,y=temp$value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage")+ coord_cartesian(ylim = c(0, 1))
print(ggobj)
for (i in 1:nrow(tv.int)) {
temp <- melt(tv.int[i, 1:ncol(tv.int)], id.vars = as.character(tv.int$title[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- temp[2:5,]
ggobj <- ggplot(temp, aes(x=temp$variable,y=temp$value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage")+ coord_cartesian(ylim = c(0, 2))
print(ggobj)
setwd("~/Dropbox/1_Research/tv-final/9. Appendix/TV_All_Time_Plots/")
ggsave(ggobj,filename=paste(title,"_Space-Time.pdf",sep=""))
}
temp <- melt(tv.int[i, 1:ncol(tv.int)], id.vars = as.character(tv.int$title[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- temp[2:5,]
ggobj <- ggplot(temp, aes(x=temp$variable,y=temp$value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage")+ coord_cartesian(ylim = c(0, 2))
print(ggobj)
temp <- melt(tv.int[i, 1:ncol(tv.int)], id.vars = as.character(tv.int$title[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- temp[2:5,]
ggobj <- ggplot(temp, aes(x=temp$variable,y=temp$value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage")+ coord_cartesian(ylim = c(0, 3))
print(ggobj)
setwd("~/Dropbox/1_Research/tv-final/9. Appendix/TV_All_Time_Plots/")
ggsave(ggobj,filename=paste(title,"_Space-Time.pdf",sep=""))
for (i in 1:nrow(tv.int)) {
temp <- melt(tv.int[i, 1:ncol(tv.int)], id.vars = as.character(tv.int$title[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- temp[2:5,]
ggobj <- ggplot(temp, aes(x=temp$variable,y=temp$value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage")+ coord_cartesian(ylim = c(0, 3))
print(ggobj)
setwd("~/Dropbox/1_Research/tv-final/9. Appendix/TV_All_Time_Plots/")
ggsave(ggobj,filename=paste(title,"_Space-Time.pdf",sep=""))
}
ggobj <- ggplot(temp, aes(x=temp$variable,y=temp$value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage") + scale_y_continuous(limits=c(0, 1))
print(ggobj)
View(temp)
ggobj <- ggplot(temp, aes(x=variable,y=value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage") + scale_y_continuous(limits=c(0, 1))
print(ggobj)
ggobj <- ggplot(temp, aes(x=variable,y=value, group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage") + scale_y_continuous(limits=c(0, 1))
print(ggobj)
ggobj <- ggplot(temp, aes(x=variable,y=as.numeric(value), group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage") + scale_y_continuous(limits=c(0, 1))
print(ggobj)
for (i in 1:nrow(tv.int)) {
temp <- melt(tv.int[i, 1:ncol(tv.int)], id.vars = as.character(tv.int$title[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- temp[2:5,]
ggobj <- ggplot(temp, aes(x=variable,y=as.numeric(value), group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage") + scale_y_continuous(limits=c(0, 1))
print(ggobj)
setwd("~/Dropbox/1_Research/tv-final/9. Appendix/TV_All_Time_Plots/")
ggsave(ggobj,filename=paste(title,"_Space-Time.pdf",sep=""))
}
for (i in 1:nrow(film.int)) {
temp <- melt(film.int[i, 1:ncol(film.int)], id.vars = as.character(film.int$time[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- temp[2:5,]
ggobj <- ggplot(temp, aes(x=variable,y=as.numeric(value), group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage")+ scale_y_continuous(limits=c(0, 1))
print(ggobj)
setwd("~/Dropbox/1_Research/tv-final/9. Appendix/Film_All_Time_Plots/")
ggsave(ggobj,filename=paste(title,"_Space-Time.pdf",sep=""))
}
setwd("~/Dropbox/1_Research/tv-final/2. Metadata/")
master.tv <- read.csv("TV_Time_Master.csv")
master.film <- read.csv("Film_Time_Master.csv")
tv.post <- subset(master.tv, date>1989 & date<2016)
film.post <- subset(master.film, date>1989 & date<2016)
tv.int <- data.frame(tv.post$title, tv.post$int.0.0.0.25, tv.post$int.0.25.0.50, tv.post$int.0.50.0.75, tv.post$int.0.75.1.0)
tv.genre <- data.frame(tv.post$genre, tv.post$int.0.0.0.25, tv.post$int.0.25.0.50, tv.post$int.0.50.0.75, tv.post$int.0.75.1.0)
film.int <- data.frame(film.post$time, film.post$int.0.0.0.25, film.post$int.0.25.0.50, film.post$int.0.50.0.75, film.post$int.0.75.1.0)
film.genre <- data.frame(film.post$genre, film.post$int.0.0.0.25, film.post$int.0.25.0.50, film.post$int.0.50.0.75, film.post$int.0.75.1.0)
genres.tv <- aggregate(.~tv.genre$tv.post.genre, data=tv.genre, FUN=mean)
genres.film <- aggregate(.~film.genre$film.post.genre, data=film.genre, FUN=mean)
colnames(genres.tv) <- c("genre", "number", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
colnames(genres.film) <- c("genre", "number", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
for (i in 1:nrow(film.int)) {
temp <- melt(film.int[i, 1:ncol(film.int)], id.vars = as.character(film.int$time[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- temp[2:5,]
ggobj <- ggplot(temp, aes(x=variable,y=as.numeric(value), group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage")+ scale_y_continuous(limits=c(0, 1))
print(ggobj)
setwd("~/Dropbox/1_Research/tv-final/9. Appendix/Film_All_Time_Plots/")
ggsave(ggobj,filename=paste(title,"_Space-Time.pdf",sep=""))
}
film.int <- data.frame(film.post$time, film.post$int.0.0.0.25, film.post$int.0.25.0.50, film.post$int.0.50.0.75, film.post$int.0.75.1.0)
film.post <- subset(master.film, date>1989 & date<2016)
tv.int <- data.frame(tv.post$title, tv.post$int.0.0.0.25, tv.post$int.0.25.0.50, tv.post$int.0.50.0.75, tv.post$int.0.75.1.0)
tv.genre <- data.frame(tv.post$genre, tv.post$int.0.0.0.25, tv.post$int.0.25.0.50, tv.post$int.0.50.0.75, tv.post$int.0.75.1.0)
film.int <- data.frame(film.post$time, film.post$int.0.0.0.25, film.post$int.0.25.0.50, film.post$int.0.50.0.75, film.post$int.0.75.1.0)
film.genre <- data.frame(film.post$genre, film.post$int.0.0.0.25, film.post$int.0.25.0.50, film.post$int.0.50.0.75, film.post$int.0.75.1.0)
tv.int <- data.frame(tv.post$title, tv.post$int.0.0.0.25, tv.post$int.0.25.0.50, tv.post$int.0.50.0.75, tv.post$int.0.75.1.0)
tv.genre <- data.frame(tv.post$genre, tv.post$int.0.0.0.25, tv.post$int.0.25.0.50, tv.post$int.0.50.0.75, tv.post$int.0.75.1.0)
film.int <- data.frame(film.post$title, film.post$int.0.0.0.25, film.post$int.0.25.0.50, film.post$int.0.50.0.75, film.post$int.0.75.1.0)
film.genre <- data.frame(film.post$genre, film.post$int.0.0.0.25, film.post$int.0.25.0.50, film.post$int.0.50.0.75, film.post$int.0.75.1.0)
for (i in 1:nrow(film.int)) {
temp <- melt(film.int[i, 1:ncol(film.int)], id.vars = as.character(film.int$time[i]), factorsAsStrings = FALSE)
temp$variable <- c("title", "X0.0~0.25", "X0.25~0.50", "X0.50~0.75", "X0.75~1.0")
title <- temp[1,2]
temp <- temp[2:5,]
ggobj <- ggplot(temp, aes(x=variable,y=as.numeric(value), group=1)) + geom_line(stat = "identity") + geom_point() + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1) + ggtitle(title) + labs(x="Script Time", y="INT Percentage")+ scale_y_continuous(limits=c(0, 1))
print(ggobj)
setwd("~/Dropbox/1_Research/tv-final/9. Appendix/Film_All_Time_Plots/")
ggsave(ggobj,filename=paste(title,"_Space-Time.pdf",sep=""))
}
